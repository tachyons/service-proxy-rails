{"version":3,"file":"index.js","sources":["../dist-src/version.js","../dist-src/is-issue-labels-update-or-replace.js","../dist-src/is-get-reference-or-list-references.js","../dist-src/index.js"],"sourcesContent":["export const VERSION = \"1.2.2\";\n","export function isIssueLabelsUpdateOrReplace({ method, url }) {\n    if (![\"POST\", \"PUT\"].includes(method)) {\n        return false;\n    }\n    if (!/\\/repos\\/[^/]+\\/[^/]+\\/issues\\/[^/]+\\/labels/.test(url)) {\n        return false;\n    }\n    return true;\n}\n","const REGEX_IS_GET_REFERENCE_PATH = /\\/repos\\/[^/]+\\/[^/]+\\/git\\/ref\\//;\nconst REGEX_IS_LIST_REFERENCES_PATH = /\\/repos\\/[^/]+\\/[^/]+\\/git\\/matching-refs\\//;\nexport function isGetReference({ method, url }) {\n    if (![\"GET\", \"HEAD\"].includes(method)) {\n        return false;\n    }\n    return REGEX_IS_GET_REFERENCE_PATH.test(url);\n}\nexport function isListReferences({ method, url }) {\n    if (![\"GET\", \"HEAD\"].includes(method)) {\n        return false;\n    }\n    return REGEX_IS_LIST_REFERENCES_PATH.test(url);\n}\n","import { RequestError } from \"@octokit/request-error\";\nimport { VERSION } from \"./version\";\nimport { isIssueLabelsUpdateOrReplace } from \"./is-issue-labels-update-or-replace\";\nimport { isGetReference, isListReferences, } from \"./is-get-reference-or-list-references\";\nexport function enterpriseCompatibility(octokit) {\n    octokit.hook.wrap(\"request\", async (request, options) => {\n        // see https://github.com/octokit/rest.js/blob/15.x/lib/routes.json#L3046-L3068\n        if (isIssueLabelsUpdateOrReplace(options)) {\n            options.data = options.labels;\n            delete options.labels;\n            // for @octokit/rest v16.x, remove validation of labels option\n            /* istanbul ignore if */\n            if (options.request.validate) {\n                delete options.request.validate.labels;\n            }\n            return request(options);\n        }\n        const isGetReferenceRequest = isGetReference(options);\n        const isListReferencesRequest = isListReferences(options);\n        if (isGetReferenceRequest || isListReferencesRequest) {\n            options.url = options.url.replace(/\\/repos\\/([^/]+)\\/([^/]+)\\/git\\/(ref|matching-refs)\\/(.*)$/, \"/repos/$1/$2/git/refs/$4\");\n            return request(options)\n                .then((response) => {\n                if (isGetReferenceRequest) {\n                    if (Array.isArray(response.data)) {\n                        throw new RequestError(`More than one reference found at \"${options.url}\"`, 404, {\n                            request: options,\n                        });\n                    }\n                    // âœ… received single reference\n                    return response;\n                }\n                // make sure that\n                if (!Array.isArray(response.data)) {\n                    response.data = [response.data];\n                }\n                return response;\n            })\n                .catch((error) => {\n                if (isListReferencesRequest && error.status === 404) {\n                    return {\n                        status: 200,\n                        headers: error.headers,\n                        data: [],\n                    };\n                }\n                throw error;\n            });\n        }\n        return request(options);\n    });\n}\nenterpriseCompatibility.VERSION = VERSION;\n"],"names":[],"mappings":"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"}