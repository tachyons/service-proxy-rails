import mixinDeep from 'mixin-deep';
import mentions from './plugins/mentions';
import increment from './plugins/increment';
import { parse, stringify, validate, check } from './main';
import { parseHeader, stringifyHeader, validateHeader, checkHeader } from './header';
import { parseCommit, stringifyCommit, validateCommit, checkCommit } from './commit';
export * from './types';
export { stringToHeader, toArray } from './utils';
export function applyPlugins(plugins, commits) {
  const arr = [];
  const cmts = [];
  const plgs = arr.concat(plugins).filter(Boolean);
  return cmts.concat(commits).filter(Boolean).reduce((result, commit) => {
    let commitObject = {};

    if (typeof commit === 'string') {
      commitObject = {
        header: {
          value: commit
        }
      };
    } else if (typeof commit === 'object' && !Array.isArray(commit)) {
      commitObject = commit;
    }

    const cmt = plgs.reduce((acc, fn) => {
      const res = fn(acc);
      return mixinDeep(acc, res);
    }, commitObject);
    return result.concat(cmt);
  }, []);
}
export const plugins = [mentions, increment];
export const mappers = {
  mentions,
  increment
};
export { parse, stringify, validate, check, parseHeader, stringifyHeader, validateHeader, checkHeader, parseCommit, stringifyCommit, validateCommit, checkCommit };