import { normalizeCommit, getValue } from '../utils';
export default function increment(commit) {
  const cmt = normalizeCommit(commit);
  let isBreaking = isBreakingChange(cmt);
  let commitIncrement = '';
  const type = getValue(cmt.header, 'type');

  if (/fix|bugfix|patch/i.test(type)) {
    commitIncrement = 'patch';
  }

  if (/feat|feature|minor/i.test(type)) {
    commitIncrement = 'minor';
  }

  if (/break|breaking|major/i.test(type) || isBreaking) {
    commitIncrement = 'major';
  }

  isBreaking = isBreaking || commitIncrement === 'major';
  return {
    increment: commitIncrement,
    isBreaking
  };
}

function isBreakingChange(commit) {
  const re = /^BREAKING\s+CHANGES?:\s+/;
  return re.test(getValue(commit.header, 'subject')) || re.test(commit.body || '') || re.test(commit.footer || '');
}