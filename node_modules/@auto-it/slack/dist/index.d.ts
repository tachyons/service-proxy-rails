import { Octokit } from "@octokit/rest";
import { Auto, IPlugin, InteractiveInit } from "@auto-it/core";
import * as t from "io-ts";
declare const pluginOptions: t.PartialC<{
    /** URL of the slack to post to */
    url: t.StringC;
    /** Who to bother when posting to the channel */
    atTarget: t.StringC;
    /** Allow users to opt into having prereleases posted to slack */
    publishPreRelease: t.BooleanC;
}>;
export declare type ISlackPluginOptions = t.TypeOf<typeof pluginOptions>;
/** Post your release notes to Slack during `auto release` */
export default class SlackPlugin implements IPlugin {
    /** The name of the plugin */
    name: string;
    /** The options of the plugin */
    readonly options: ISlackPluginOptions;
    /** Initialize the plugin with it's options */
    constructor(options?: ISlackPluginOptions | string);
    /** Custom initialization for this plugin */
    init(initializer: InteractiveInit): void;
    /** Tap into auto plugin points. */
    apply(auto: Auto): void;
    /** Post the release notes to slack */
    postToSlack(auto: Auto, newVersion: string, releaseNotes: string, releases: Array<Octokit.Response<Octokit.ReposCreateReleaseResponse>>): Promise<void>;
}
export {};
//# sourceMappingURL=index.d.ts.map