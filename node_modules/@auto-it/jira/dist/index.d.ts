import * as t from "io-ts";
import { Auto, IPlugin, InteractiveInit } from "@auto-it/core";
import { IExtendedCommit } from "@auto-it/core/dist/log-parse";
declare const pluginOptions: t.TypeC<{
    /** Url to a hosted JIRA instance */
    url: t.StringC;
}>;
export declare type IJiraPluginOptions = t.TypeOf<typeof pluginOptions>;
interface IJiraCommit extends IExtendedCommit {
    /** The jira info for the commit */
    jira?: {
        /** The jira story numbers attached to teh commit */
        number: string[];
    };
}
/** Get the jira number from a commit message. */
export declare function parseJira(commit: IExtendedCommit): IJiraCommit;
/** Include Jira story information in your changelogs */
export default class JiraPlugin implements IPlugin {
    /** The name of the plugin */
    name: string;
    /** The options of the plugin */
    readonly options: IJiraPluginOptions;
    /** Initialize the plugin with it's options */
    constructor(options: IJiraPluginOptions | string);
    /** Custom initialization for this plugin */
    init(initializer: InteractiveInit): void;
    /** Tap into auto plugin points. */
    apply(auto: Auto): void;
}
export {};
//# sourceMappingURL=index.d.ts.map